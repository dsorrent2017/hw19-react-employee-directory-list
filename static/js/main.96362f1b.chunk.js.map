{"version":3,"sources":["components/SearchForm.js","components/EmployeeCard.js","utils/API.js","components/SearchResultContainer.js","App.js","index.js"],"names":["SearchForm","props","console","log","className","htmlFor","onChange","handleInputChange","value","search","name","type","placeholder","id","onClick","handleFormSubmit","EmployeeCard","scope","alt","firstName","src","picture","lastName","email","phone","axios","get","SearchResultContainer","state","result","filter","filterBy","currentSort","sortField","filterEmployees","searchkey","filterResult","person","setState","event","preventDefault","target","API","then","res","data","results","map","e","i","first","last","large","dob","age","key","catch","err","this","item","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96362f1b.chunk.js","sourcesContent":["import React from \"react\";\n\n/**\r\n * Set up a Search Control button and Input text control\r\n * @param {any} props\r\n */\n\nfunction SearchForm(props) {\n    debugger; console.log(\"SearchForm(props)\");\n  return (\n    <form>\n          <div className=\"form-group\">\n              {/* for( search in html-form-elements {\n                */\n              }\n        <label htmlFor=\"search\">Search:</label>\n        <input\n          onChange={props.handleInputChange}\n          value={props.search}\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search for an Employee\"\n          id=\"search\"\n        />\n        <button onClick={props.handleFormSubmit} className=\"btn btn-primary mt-3\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\n\nfunction EmployeeCard(props) {\n\n  return (\n    // <div className=\"row\">\n    <tr>\n      {/* <div className= \"col-2\"> */}\n      {/* <td > */}\n      <th scope=\"row\"><img alt={props.firstName}  src={props.picture} /></th>  \n      {/* </td>  */}\n      {/* </div>\n      <div className= \"col-2\"> */}\n      <td >{props.firstName}</td>\n      {/* </div>\n      <div className= \"col-2\"> */}\n      <td >{props.lastName}</td>\n      {/* </div>\n      <div className= \"col-3\"> */}\n      <td >{props.email}</td>\n      {/* </div>\n      <div className= \"col-3\"> */}\n      <td >{props.phone}</td>\n      {/* </div> */}\n   </tr>\n  //  </div>\n  );\n}\n\nexport default EmployeeCard;","import axios from \"axios\";\n\n\nconst BASEURL = \"https://randomuser.me/api/?results=200&nat=us\";\n\n//get a list of users that we can plug into our company\nexport default {\n    search: function () {\n       return axios.get(BASEURL);\n  }\n};\n\n","import React, { Component } from \"react\";\nimport SearchForm from \"./SearchForm\";\nimport EmployeeCard from \"./EmployeeCard\";\nimport API from \"../utils/API\";\nimport \"../styles/Result.css\";\nconst MaxResults = 20;\n\nclass SearchResultContainer extends Component {\n\n  debugger;\n  \n\n  state = {\n    result: [],\n    filter: \"\",\n    filterBy: \"lastName\",\n    currentSort: \"default\",\n    sortField: \"\"\n\n  };\n\n    // onsafe_componentWillMount()\n    componentDidMount() {\n        debugger; console.log(\"componentDidMount\");\n    API.search()\n      .then(res => {\n        console.log(res)\n        this.setState({\n          result: res.data.results.map((e, i) => ({\n            firstName: e.name.first,\n            lastName: e.name.last,\n            picture: e.picture.large,\n            email: e.email,\n            phone: e.phone,\n            dob: e.age,\n            key: i\n          }))\n\n        })\n     \n      })\n      .catch(err => console.log(err));\n  }\n\n  filterEmployees = (searchkey) => {\n    console.log(\"filterEmployees by searchKey .... Uses State\");\n    console.log(searchkey);\n    console.log(this.state.result);\n    // this.state.result = this.state.result.filter(this.state.result => this.state.result.includes(searchkey));\n    var filterResult = this.state.result.filter(person => person.firstName === searchkey)\n\n\n    /*****\n     https://reactjs.org/docs/react-component.html#setstate\n     setState() enqueues changes to the component state and tells React that this component and its children need to be re-rendered with the updated state. \n     This is the primary method you use to update the user interface in response to event handlers and server responses.\n    *****/\n    this.setState({  //use React API setState\n      result:filterResult\n      \n    })\n\n   \n  }\n\n\n    handleFormSubmit = event => {\n        debugger; console.log(\"handleFormSubmit\")\n    event.preventDefault();\n    const value = event.target.value;\n    const name = event.target.name;\n    console.log(\"**********\");\n    console.log(value);\n    console.log(name);\n    //filter function here\n    this.filterEmployees(value);\n    this.setState({\n\n      [name]: value\n\n    });\n    this.filterEmployees(value);\n    this.filterEmployees(this.state.search);\n\n  };\n\n\n    handleInputChange = event => {\n        debugger; console.log(\"handleInputChange\");\n    event.preventDefault();\n    console.log(event);\n    const value = event.target.value;\n    const name = event.target.name;\n    console.log(\"**********\");\n    console.log(value);\n    console.log(name);\n\n    this.setState({\n\n      [name]: value\n\n    });\n        \n  };\n\n    render() {\n        debugger; console.log(\"render() -- remember to remove uneeded comments\");\n        console.log(\"use iterator over Employee collection : [...this.state.result].map((item)\");\n        console.log('this is the old Java hasNext iteration in disguise');\n    return (\n      <div className=\"container\">\n        <div className=\"row\"> \n          <div className=\"col-md-12\"> \n            <h2>Employee Directory</h2>\n          </div>\n            </div>\n        {/* <!-- this row takes 1/2 page width and contains the seach form. It contains 2 function references --> */}\n\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <SearchForm\n              value={this.state.search}\n               handleInputChange={this.handleInputChange}\n               handleFormSubmit={this.handleFormSubmit}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          {/* <div > */}\n          <table className=\"table\">\n            <tr>\n              <th scope=\"col\">Photo</th>\n                        <th>First Name</th>\n\n              {/*  <!-- React convention to place comments inside of races to perform operations which are DOM Nodes.  \n                *  Sorting is a requirement for this assignment--> \n                */}\n\n              {/* <th onClick={this.onSortChange}>First Name   */}\n              {/* <button onClick={this.onSortChange}> ^\n\t\t\t\t\t\t\t\t</button> \n                */}\n              {/* </th> */}\n              <th scope=\"col\">Last Name </th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Phone</th>\n            </tr>\n                    {/* foreach(EmployeeCard item in this.state.result.sortedMap fill in the fields for an EmployeeCard) { \n                     * Lay out the presentation - html;\n                     * Map in the data from the EmployeeCard Item from the sortedMap\n                     * }\n                     */}\n            {/* { [...this.state.result].sort(this.sortTypes[this.state.currentSort].fn).map((item) =>  */}\n            {/* {this.state.result.length > 0 ? (\n                <div>\n                  {this.state.result.map(item => (\n                    <EmployeeCard\n                      picture={item.picture}\n                      firstName={item.firstName}\n                      lastName={item.lastName}\n                      email={item.email}\n                      phone={item.phone}\n                      key={item.key}\n                    />\n                  ))}\n                </div>\n              ) : (<div />)} */}\n            {[...this.state.result].map((item) =>\n              <EmployeeCard\n                picture={item.picture}\n                firstName={item.firstName}\n                lastName={item.lastName}\n                email={item.email}\n                phone={item.phone}\n                key={item.key}\n              />\n            )}\n\n          </table>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default SearchResultContainer;","import React from \"react\";\nimport SearchResultContainer from \"./components/SearchResultContainer\";\n\n//This code convention traces back to Java Server Page Tag library.  It is like Angular directives\nfunction App() {\n    console.log(\"App Called\");\n  return <SearchResultContainer />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}